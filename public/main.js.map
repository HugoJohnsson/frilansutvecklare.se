{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add/add.component.html","webpack:///./src/app/components/add/add.component.scss","webpack:///./src/app/components/add/add.component.ts","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.scss","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.scss","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/jobb/jobb.component.html","webpack:///./src/app/components/jobb/jobb.component.scss","webpack:///./src/app/components/jobb/jobb.component.ts","webpack:///./src/app/components/jobbdetails/jobbdetails.component.html","webpack:///./src/app/components/jobbdetails/jobbdetails.component.scss","webpack:///./src/app/components/jobbdetails/jobbdetails.component.ts","webpack:///./src/app/components/jobbmessages/jobbmessages.component.html","webpack:///./src/app/components/jobbmessages/jobbmessages.component.scss","webpack:///./src/app/components/jobbmessages/jobbmessages.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.scss","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/messages/messages.component.html","webpack:///./src/app/components/messages/messages.component.scss","webpack:///./src/app/components/messages/messages.component.ts","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.scss","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.scss","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/profile2/profile2.component.html","webpack:///./src/app/components/profile2/profile2.component.scss","webpack:///./src/app/components/profile2/profile2.component.ts","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.scss","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/updateprofile/updateprofile.component.html","webpack:///./src/app/components/updateprofile/updateprofile.component.scss","webpack:///./src/app/components/updateprofile/updateprofile.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/mail.service.ts","webpack:///./src/app/services/route.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<header>\\n  <app-navbar></app-navbar>\\n</header>\\n\\n<lib-ngx-notification class=\\\"ngx-notification\\\"></lib-ngx-notification>\\n\\n<main>\\n  <router-outlet></router-outlet>\\n</main>\\n\\n<footer class=\\\"page-footer teal\\\">\\n  <app-footer></app-footer>\\n</footer>\\n\\n<script src=\\\"https://code.jquery.com/jquery-2.1.1.min.js\\\"></script>\\n<script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js\\\"></script>\\n<script>\\n(function($){\\n  $(function(){\\n\\n    $('.sidenav').sidenav();\\n    $('.parallax').parallax();\\n\\n  }); // end of document ready\\n})(jQuery); // end of jQuery name space\\n\\n</script>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'jobb';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule }   from '@angular/forms';\nimport { NgFlashMessagesModule } from 'ng-flash-messages';\nimport { AuthGuard } from './guards/auth.guard';\nimport { NgxNotificationComponent } from 'ngx-notification';\nimport { MzToastModule } from 'ngx-materialize';\nimport { MzModalModule } from 'ngx-materialize'\nimport { NgxPaginationModule } from 'ngx-pagination';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { JobbComponent } from './components/jobb/jobb.component';\nimport { AddComponent } from './components/add/add.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\n// services\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { RouteService } from './services/route.service';\n\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { JobbdetailsComponent } from './components/jobbdetails/jobbdetails.component';\nimport { MessagesComponent } from './components/messages/messages.component';\nimport { JobbmessagesComponent } from './components/jobbmessages/jobbmessages.component';\nimport { UpdateprofileComponent } from './components/updateprofile/updateprofile.component';\nimport { Profile2Component } from './components/profile2/profile2.component';\n\nexport function tokenGetter() {\n  return localStorage.getItem('id_token');\n}\n\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n  {\n    path: 'logga_in',\n    component: LoginComponent,\n  },\n  {\n    path: 'registrera',\n    component: RegisterComponent,\n  },\n  {\n    path: 'profil',\n    component: ProfileComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'profil/updatera',\n    component: UpdateprofileComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'användare/:jobId/:id',\n    component: Profile2Component,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'mina_jobb',\n    component: MessagesComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'mina_jobb/:id',\n    component: JobbmessagesComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'jobb',\n    component: JobbComponent,\n  },\n  {\n    path: 'details/:id',\n    component: JobbdetailsComponent,\n  },\n  {\n    path: 'jobb/:searchTerm',\n    component: JobbComponent,\n  },\n  {\n    path: 'skapa',\n    component: AddComponent,\n    canActivate: [AuthGuard]\n  },\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavbarComponent,\n    FooterComponent,\n    JobbComponent,\n    AddComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    JobbdetailsComponent,\n    MessagesComponent,\n    JobbmessagesComponent,\n    NgxNotificationComponent,\n    UpdateprofileComponent,\n    Profile2Component,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule.forRoot(appRoutes),\n    HttpClientModule,\n    FormsModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n      }\n    }),\n    NgFlashMessagesModule.forRoot(),\n    MzToastModule,\n    MzModalModule,\n    NgxPaginationModule\n  ],\n  exports: [\n    MzToastModule,\n  ],\n  providers: [ValidateService, AuthService, RouteService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row add-form\\\">\\n      <h5 class=\\\"center\\\">Skapa ett jobb</h5>\\n      <form class=\\\"col m6 offset-m3 s12 center\\\" (submit)=\\\"onAddSubmit()\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"input-field col s12\\\">\\n            <input [(ngModel)]=\\\"title\\\" name=\\\"title\\\" id=\\\"title\\\" type=\\\"text\\\" class=\\\"validate\\\" autofocus>\\n            <label for=\\\"title\\\">Titel</label>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"input-field col s12\\\">\\n            <textarea [(ngModel)]=\\\"description\\\" name=\\\"description\\\" id=\\\"description\\\" class=\\\"materialize-textarea\\\" style=\\\"height: 10rem;\\\"></textarea>\\n            <label for=\\\"description\\\">Beskrivning</label>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"input-field col s12\\\">\\n            <input [(ngModel)]=\\\"technologies\\\" name=\\\"technologies\\\" id=\\\"technologies\\\" type=\\\"text\\\" class=\\\"validate\\\">\\n            <label for=\\\"technologies\\\">Färdigheter (lämna blankt om du inte vet)</label>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"input-field col s12\\\">\\n            <input [(ngModel)]=\\\"budget\\\" name=\\\"budget\\\" id=\\\"budget\\\" type=\\\"text\\\" class=\\\"validate\\\">\\n            <label for=\\\"budget\\\">Budget (lämna blankt om du inte vet)</label>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"input-field col s12\\\">\\n            <input [(ngModel)]=\\\"contact_email\\\" name=\\\"contact_email\\\" id=\\\"contact_email\\\" type=\\\"text\\\" class=\\\"validate\\\">\\n            <label for=\\\"contact_email\\\">Din email</label>\\n          </div>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"waves-effect waves-light btn btn-large\\\">Lägg upp jobb</button>\\n      </form>\\n    </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRkL2FkZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { MzToastService } from 'ngx-materialize';\nimport { Router } from '@angular/router';\n\nimport { ApiService } from '../../services/api.service';\nimport { ValidateService } from '../../services/validate.service';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.scss']\n})\nexport class AddComponent implements OnInit {\n\n  title: String;\n  description: String;\n  budget: String;\n  technologies: String;\n  contact_email: String;\n\n  constructor(\n    private apiService: ApiService,\n    private validateService: ValidateService,\n    private router: Router,\n    private toastService: MzToastService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onAddSubmit(){\n    const job = {\n      title: this.title,\n      description: this.description,\n      technologies: this.technologies,\n      budget: this.budget,\n      contact_email: this.contact_email,\n      owner_id: JSON.parse(localStorage.getItem('user'))['id']\n    }\n\n    if (!this.validateService.validateJob(job)){\n      return false;\n    }\n\n    if(!this.validateService.validateEmail(job.contact_email)){\n      this.toastService.show('Du måste fylla i en giltig e-postadress!', 3000, 'dark', () => {});\n      return false;\n    };\n    if(job.budget == undefined || job.budget == ''){\n      job.budget = 'Ingen budget specificerad.';\n    };\n    if(job.technologies == undefined || job.technologies == ''){\n      job.technologies = 'Inga färdigheter angivet.';\n    };\n\n    this.apiService.addJob(job)\n    .subscribe(data => {\n      if(data['success']){\n        this.toastService.show('Ditt jobb är nu upplagt!', 3000, 'dark', () => {});\n        return this.router.navigate(['jobb']);\n      } else {\n      this.toastService.show('Något oväntat hände, vänligen försök igen.', 3000, 'dark', () => {});\n        return false;\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row center\\\">\\n    <div class=\\\"col\\\">\\n      <h5 class=\\\"white-text\\\">Frilansutvecklare.se</h5>\\n      <p class=\\\"grey-text text-lighten-4\\\">\\n        Frilansutvecklare.se är det självklara valet för både frilansutvecklare och personer som är på jakt efter utvecklare.\\n        Tjänsten är designad för att vara enkel att använda och göra processen att hitta utvecklare\\n        eller jobb så smidig den kan bli.\\n      </p>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"footer-copyright\\\">\\n  <div class=\\\"container\\\">\\n\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div id=\\\"index-banner\\\" class=\\\"parallax-container\\\">\\n  <div class=\\\"section no-pad-bot\\\">\\n    <div class=\\\"container\\\">\\n      <br><br>\\n      <h2 class=\\\"header center teal-text text-lighten-2\\\">Hej!</h2>\\n      <div class=\\\"row center\\\">\\n        <h5 class=\\\"header col s12 light teal-text\\\">Hitta ett jobb som passar dig här.</h5>\\n      </div>\\n\\n      <div class=\\\"row center\\\">\\n        <form id=\\\"searchForm\\\" class=\\\"col s12 center\\\" (submit)=\\\"onSearchSubmit()\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"input-field col s12 m6 offset-m3\\\">\\n              <i class=\\\"material-icons prefix\\\">search</i>\\n              <input id=\\\"searchInput\\\" placeholder=\\\"T.ex Intranät, React, stor hemsida...\\\" [(ngModel)]=\\\"searchTerm\\\" name=\\\"searchTerm\\\" id=\\\"first_name\\\" type=\\\"text\\\" class=\\\"autocomplete validate white-dark\\\" autofocus>\\n            </div>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-large\\\">Sök jobb</button>\\n          <a routerLink=\\\"/jobb\\\" class=\\\"btn btn-large\\\" style=\\\"margin-left:5px;\\\">Alla jobb</a>\\n        </form>\\n      </div>\\n      <br><br>\\n    </div>\\n  </div>\\n  <div class=\\\"parallax\\\"><img src='assets/img/bg2.jpg' alt=\\\"Unsplashed background img 1\\\" style=\\\"transform: translate3d(-50%, 257.4222222222222px, 0px); opacity: 1;\\\"></div>\\n</div>\\n\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"section\\\">\\n\\n    <!--   Icon Section   -->\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12 m6\\\">\\n        <div class=\\\"icon-block center\\\">\\n          <h2 class=\\\"center teal-text\\\"><i class=\\\"material-icons\\\">code</i></h2>\\n          <h5 class=\\\"center\\\">Är du utvecklare?</h5>\\n          <p class=\\\"light center-align\\\">\\n            Här kan du enkelt söka efter jobb som passar dina färdigheter och intresse,\\n            när du hittat ett jobb du är intresserad av kan du lätt ta kontakt med arbetsgivaren och börja chatta.\\n          </p>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col s12 m6\\\">\\n        <div class=\\\"icon-block center\\\">\\n          <h2 class=\\\"center teal-text\\\"><i class=\\\"material-icons\\\">computer</i></h2>\\n          <h5 class=\\\"center\\\">På jakt efter utvecklare?</h5>\\n          <p class=\\\"light center-align\\\">\\n            Med oss kan du lätt lägga upp ett jobb\\n            för att sedan bli kontaktad av kompetenta utvecklare.\\n          </p>\\n        </div>\\n      </div>\\n\\n  </div>\\n</div>\\n\\n  <div class=\\\"container\\\">\\n    <div class=\\\"section\\\">\\n\\n      <div class=\\\"row center\\\">\\n        <div class=\\\"col s12\\\">\\n          <h3><i class=\\\"mdi-content-send brown-text\\\"></i></h3>\\n          <h4>Hur funkar det?</h4>\\n          <p class=\\\"center-align light\\\">\\n            Oavsett om du är utvecklare eller är på jakt efter utvecklare är det enkelt att komma igång med vår tjänst.\\n            Skapa ett konto, tryck på \\\"Skapa ett jobb\\\" och lägg upp ett jobb inom några minuter, eller använder du vår söktjänst\\n            för att hitta de jobb som passar dig och dina färdigheter. När någon blivit intresserad av ditt jobb lägger de\\n            lätt ett bud med ett frivilligt meddelande, dessa ser du under \\\"Mina jobb\\\" och kan smidigt kolla igenom profiler.\\n            När du hittat en utvecklare du gillar tar du helt enkelt bort jobbet. Enkelt!\\n          </p>\\n        </div>\\n        <a routerLink=\\\"/registrera\\\" class=\\\"btn btn-large\\\">Skapa ett konto</a>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgFlashMessageService } from 'ng-flash-messages';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  searchTerm: String;\n\n  constructor(private router: Router, private flashMessage: NgFlashMessageService) { }\n\n  ngOnInit() {\n  }\n\n  onSearchSubmit(){\n    if(this.searchTerm){\n      this.router.navigate(['jobb', this.searchTerm]);\n    }else{\n      return false;\n    }\n  }\n\n}\n","module.exports = \"<div class=\\\"section\\\">\\n\\n  <!--   Icon Section   -->\\n  <div *ngIf=\\\"jobs\\\" class=\\\"row\\\">\\n\\n    <h4 *ngIf=\\\"!searchTerm\\\" class=\\\"text-lighten-2 center\\\">Alla jobb</h4>\\n    <h4 *ngIf=\\\"searchTerm\\\" class=\\\"text-lighten-2 center\\\">Resultat för: \\\"{{searchTerm}}\\\"</h4>\\n\\n    <div *ngIf=\\\"jobs.length == 0 && searchTerm != undefined\\\" class=\\\"center\\\">\\n        <p  class=\\\"text-lighten-2 center\\\">Tyvärr gav din sökning inga resultat.</p>\\n        <a routerLink=\\\"\\\" class=\\\"btn\\\">Tillbaka till sök</a>\\n    </div>\\n\\n    <div *ngIf=\\\"jobs.length == 0 && searchTerm == undefined\\\" class=\\\"center\\\">\\n        <p *ngIf=\\\"jobs.length == 0 && searchTerm == undefined\\\" class=\\\"text-lighten-2 center\\\">Det finns inga tillgängliga jobb just nu.</p>\\n        <a routerLink=\\\"\\\" class=\\\"btn center-align searchBtn\\\">Tillbaka till sök</a>\\n        <a routerLink=\\\"/profil\\\" class=\\\"btn center-align searchBtn\\\">Gå till min profil</a>\\n    </div>\\n\\n      <div *ngFor=\\\"let item of jobs\\\" class=\\\"col s12 m6 offset-m3\\\">\\n        <div class=\\\"card horizontal\\\">\\n          <div class=\\\"card-stacked\\\">\\n            <div class=\\\"card-content\\\">\\n              <div class=\\\"right\\\">\\n                  <small>Publicerad {{ item.published }}</small><br>\\n                  <small class=\\\"right teal-text\\\">Jag äger detta jobbet</small>\\n              </div>\\n              <h5>{{ item.title }}</h5>\\n              <p>{{ text_truncate(item.description, 40) }}</p>\\n              <small><strong>Skills: </strong>{{ item.technologies }}</small><br>\\n              <small><strong>Ägare: </strong>{{ item['user.name'] }}</small>\\n            </div>\\n            <div class=\\\"card-action grey lighten-5\\\">\\n              <a routerLink=\\\"/details/{{ item.id }}\\\" class=\\\"btn btn-small\\\">Jag är intresserad</a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvam9iYi9qb2JiLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../services/api.service';\nimport { ActivatedRoute } from '@angular/router';\nimport TimeAgo from 'javascript-time-ago'\nimport sv from 'javascript-time-ago/locale/sv'\n\nTimeAgo.addLocale(sv)\nconst timeAgo = new TimeAgo('sv-SV');\n\n@Component({\n  selector: 'app-jobb',\n  templateUrl: './jobb.component.html',\n  styleUrls: ['./jobb.component.scss'],\n  providers: [ApiService]\n})\nexport class JobbComponent implements OnInit {\n\n  jobs: any = [];\n  searchTerm: String;\n\n  constructor(private apiService: ApiService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n\n    if(this.route.snapshot.paramMap.get(\"searchTerm\")){\n      const term = this.route.snapshot.paramMap.get(\"searchTerm\");\n      this.searchTerm = term;\n\n      this.apiService.searchJobs(term)\n      .subscribe(data => {\n        const jobs = JSON.parse(data['jobb']).map(item => {\n          const d = new Date(item.createdAt);\n          item.published = timeAgo.format(d);\n          return item;\n        });\n        this.jobs = jobs;\n      });\n\n    } else {\n      this.apiService.getAllJobs()\n      .subscribe(data => {\n        const jobs = JSON.parse(data['jobb']).map(item => {\n          const d = new Date(item.createdAt);\n          item.published = timeAgo.format(d);\n          return item;\n        });\n        this.jobs = jobs;\n      });\n    }\n  }\n\n  text_truncate(str, length, ending){\n    if (length == null) {\n      length = 100;\n    }\n    if (ending == null) {\n      ending = '...';\n    }\n    if (str.length > length) {\n      return str.substring(0, length - ending.length) + ending;\n    } else {\n      return str;\n    }\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"section\\\">\\n\\n    <div class=\\\"row\\\" style=\\\"margin-top:15px;\\\">\\n\\n      <div class=\\\"col s12 m7 left\\\" style=\\\"word-wrap: break-word;\\\">\\n        <h4 class=\\\"text-lighten-2 jobb-title\\\">{{ title }}</h4>\\n        <p>\\n          <strong>Budget: </strong>{{ budget }}<br>\\n          <strong>Färdigheter: </strong>{{ technologies }}<br>\\n          <strong>Arbetsgivare: </strong>{{ employerName }}\\n        </p>\\n        <p>{{ description }}</p>\\n        <br>\\n        <small class=\\\"left\\\">Publicerad {{ published }}</small>\\n      </div>\\n\\n      <div *ngIf=\\\"!userIsOwner\\\" class=\\\"col s12 m4 offset-m1 z-depth-1\\\" style=\\\"margin-top:15px;padding:10px;\\\">\\n        <form class=\\\"col s12 m12\\\" method=\\\"post\\\" (submit)=\\\"onContactSubmit()\\\">\\n          <div class=\\\"row center\\\">\\n            <div class=\\\"input-field col s12 m12\\\">\\n              <input *ngIf=\\\"authService.loggedIn()\\\" [(ngModel)]=\\\"bidAmount\\\" name=\\\"bidAmount\\\" type=\\\"text\\\" id=\\\"amount\\\">\\n              <input *ngIf=\\\"!authService.loggedIn()\\\" disabled [(ngModel)]=\\\"bidAmount\\\" name=\\\"bidAmount\\\" type=\\\"text\\\" id=\\\"amount\\\">\\n              <label for=\\\"amount\\\">Ange belopp i kr</label>\\n            </div>\\n            <div class=\\\"input-field col s12 m12\\\">\\n              <textarea *ngIf=\\\"authService.loggedIn()\\\" [(ngModel)]=\\\"bidMessage\\\" name=\\\"bidMessage\\\" id=\\\"message\\\" type=\\\"email\\\" class=\\\"validate materialize-textarea\\\" style=\\\"height: 10rem;\\\"></textarea>\\n              <textarea *ngIf=\\\"!authService.loggedIn()\\\" disabled [(ngModel)]=\\\"bidMessage\\\" name=\\\"bidMessage\\\" id=\\\"message\\\" type=\\\"email\\\" class=\\\"validate materialize-textarea\\\" style=\\\"height: 10rem;\\\"></textarea>\\n              <label for=\\\"message\\\">Lägg till ett meddelande (frivilligt)</label>\\n            </div>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn\\\" style=\\\"width: 100%;\\\" [disabled]=\\\"!authService.loggedIn()\\\">Lägg bud</button><br><br>\\n          <small *ngIf=\\\"!authService.loggedIn()\\\"><a routerLink=\\\"/logga_in\\\">Logga in </a>för att lägga ett bud.</small>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n  <a routerLink=\\\"/jobb\\\" class=\\\"btn mt mb\\\">Gå tillbaka</a>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvam9iYmRldGFpbHMvam9iYmRldGFpbHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../services/api.service';\nimport { MailService } from '../../services/mail.service';\nimport { AuthService } from '../../services/auth.service';\nimport { MzToastService } from 'ngx-materialize';\nimport TimeAgo from 'javascript-time-ago'\nimport sv from 'javascript-time-ago/locale/sv'\n\nTimeAgo.addLocale(sv)\nconst timeAgo = new TimeAgo('sv-SV');\n\n@Component({\n  selector: 'app-jobbdetails',\n  templateUrl: './jobbdetails.component.html',\n  styleUrls: ['./jobbdetails.component.scss']\n})\nexport class JobbdetailsComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private authService: AuthService,\n    private mailService: MailService,\n    private toastService: MzToastService\n    ) { }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"section\\\" [ngClass]=\\\"{center:bids.length == 0}\\\">\\n\\n    <h4 class=\\\"text-lighten-2 center mb\\\">Alla bud för: <strong>{{ job.title }}</strong></h4>\\n\\n    <ul *ngIf=\\\"bids\\\" class=\\\"collection\\\">\\n      <li *ngFor=\\\"let item of bids\\\" class=\\\"collection-item avatar\\\">\\n          <i class=\\\"material-icons circle red lighten-2 pointer\\\" (click)=\\\"deleteBidHandler(item.id)\\\">delete</i>\\n        <span class=\\\"title\\\">{{ item['user'].name }} buder:</span>\\n        <p><b>{{ item.amount }} kr</b><br>\\n          och säger:<br>\\n          <i>{{ item.message }}</i>\\n        </p>\\n        <p><b>Kontakta budgivaren: </b>{{ item['user'].email }}</p>\\n        <div class=\\\"secondary-content \\\">\\n            <a routerLink=\\\"/användare/{{job.id}}/{{item['user'].id}}\\\" class=\\\"btn btn-small\\\">Visa profil</a> \\n        </div>\\n      </li>\\n    </ul>\\n\\n    <p *ngIf=\\\"bids.length == 0\\\" class=\\\"center\\\">\\n      Det finns för tillfället inga bud!\\n    </p>\\n\\n    <a routerLink=\\\"/mina_jobb\\\" class=\\\"btn mt mb\\\">Gå tillbaka</a>\\n\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvam9iYm1lc3NhZ2VzL2pvYmJtZXNzYWdlcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../services/api.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { MzToastService } from 'ngx-materialize';\nimport { MzModalService } from 'ngx-materialize'\n\n@Component({\n  selector: 'app-jobbmessages',\n  templateUrl: './jobbmessages.component.html',\n  styleUrls: ['./jobbmessages.component.scss']\n})\nexport class JobbmessagesComponent implements OnInit {\n\n  bids: any = [];\n  job: Object;\n\n  constructor(\n    private apiService: ApiService, \n    private router: Router, \n    private route: ActivatedRoute,\n    private toastService: MzToastService,\n    private modalService: MzModalService,\n  ) { }\n\n  ngOnInit() {\n    this.job = {};\n    this.route.params.subscribe(params => {\n      this.apiService.getJobBids(params['id'])\n      .subscribe(data => {\n        this.bids = data['bids'];\n        this.job = data['jobb'];\n      });\n    })\n  }\n\n  deleteBidHandler(bidId){\n    this.apiService.deleteBid(bidId)\n    .subscribe(data => {\n      if(data['success']){\n        const newBidsArr = this.bids.filter(obj => obj.id !== bidId)\n        this.bids = newBidsArr;\n      } else {\n        this.toastService.show('Något oväntat hände, vänligen försök igen.', 3000, 'dark', () => {});\n      }\n    })\n  }\n\n}\n","module.exports = \"<div class=\\\"container center\\\">\\n  <div class=\\\"row login-form\\\">\\n    <h4>Logga in</h4>\\n    <form class=\\\"col m4 offset-m4 s12\\\" (submit)=\\\"onLoginSubmit()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"input-field col s12\\\">\\n          <input [(ngModel)]=\\\"username\\\" name=\\\"username\\\" id=\\\"username\\\" type=\\\"text\\\" class=\\\"validate\\\" autofocus>\\n          <label for=\\\"username\\\">Användarnamn</label>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"input-field col s12\\\">\\n          <input [(ngModel)]=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" type=\\\"password\\\" class=\\\"validate\\\">\\n          <label for=\\\"password\\\">Lösendord</label>\\n        </div>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn\\\">Logga in</button><br><br>\\n      <span>Har du inget konto? </span><a routerLink=\\\"/registrera\\\">Skapa här</a>\\n    </form>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MzToastService } from 'ngx-materialize';\n\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n\n  username: String;\n  password: String;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private toastService: MzToastService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit(){\n    const user = {\n      username: this.username,\n      password: this.password\n    };\n\n    this.authService.loginUser(user)\n    .subscribe(data => {\n      if(data['success']){\n        this.authService.storeUserData(data['token'], data['user']);\n        this.toastService.show('Du är nu inloggad!', 3000, 'dark', () => {});\n        this.router.navigate(['jobb']);\n      } else {\n        this.toastService.show(data['msg'], 3000, 'dark', () => {});\n        return false;\n      }\n    })\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"section\\\">\\n\\n    <h4 class=\\\"text-lighten-2 center mb\\\">Upplagda jobb</h4>\\n\\n    <div class=\\\"row\\\">\\n\\n      <div *ngFor=\\\"let item of jobs\\\" class=\\\"col s12 m6\\\">\\n        <div class=\\\"card-panel grey lighten-5 z-depth-1\\\">\\n          <span class=\\\"black-text\\\">{{ item.title }}</span>\\n          <br>\\n          <small>\\n            {{ text_truncate(item.description, 70) }}\\n          </small>\\n          <br>\\n          <small><strong>Din budget: </strong>{{ item.budget }}</small>\\n          <br>\\n          <small>Det finns <strong>{{ item.newBidsCount }}</strong> nya bud!</small>\\n\\n          <a (click)=\\\"deleteJobHandler(item.id)\\\" class=\\\"btn btn-small right red lighten-2 ml-10\\\">Ta bort</a>\\n          <a routerLink=\\\"/mina_jobb/{{item.id}}\\\" class=\\\"btn btn-small right\\\">Visa alla bud</a>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWVzc2FnZXMvbWVzc2FnZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../services/api.service';\nimport { Router } from '@angular/router';\n\nimport { MzToastService } from 'ngx-materialize';\n\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss']\n})\nexport class MessagesComponent implements OnInit {\n\n  jobs: any = [];\n\n  constructor(\n    private apiService: ApiService, \n    private router: Router,\n    private toastService: MzToastService\n  ) { }\n\n  ngOnInit() {\n    this.apiService.getUserJobs(JSON.parse(localStorage.getItem('user'))['id'])\n    .subscribe(data => {\n      this.jobs = JSON.parse(data['jobb']);\n    });\n  }\n\n  deleteJobHandler(jobId){\n    this.apiService.deleteJob(jobId)\n    .subscribe(data => {\n      if(data['success']){\n        const newJobsArr = this.jobs.filter(obj => obj.id !== jobId)\n        this.jobs = newJobsArr;\n      } else {\n        this.toastService.show('Något oväntat hände, vänligen försök igen.', 3000, 'dark', () => {});\n      }\n    })\n  }\n\n  text_truncate(str, length, ending){\n    if (length == null) {\n      length = 100;\n    }\n    if (ending == null) {\n      ending = '...';\n    }\n    if (str.length > length) {\n      return str.substring(0, length - ending.length) + ending;\n    } else {\n      return str;\n    }\n  }\n\n}\n","module.exports = \"<div class=\\\"navbar-fixed\\\">\\n    <nav class=\\\"white\\\" role=\\\"navigation\\\">\\n        <div class=\\\"nav-wrapper\\\">\\n          <a id=\\\"logo-container\\\" routerLink=\\\"\\\" class=\\\"brand-logo\\\" style=\\\"margin-left:15px;\\\">Frilansutvecklare.se</a>\\n          <ul class=\\\"right hide-on-med-and-down\\\" style=\\\"padding-right:15px;\\\">\\n            <li><a routerLink=\\\"\\\">Hem</a></li>\\n            <li><a routerLink=\\\"jobb\\\">Alla jobb</a></li>\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" routerLink=\\\"skapa\\\">Skapa ett jobb</a></li>\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" routerLink=\\\"mina_jobb\\\">Mina jobb</a></li>\\n            <li><a *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"logga_in\\\">Logga in</a></li>\\n            <li><a *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"registrera\\\">Skapa konto</a></li>\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" routerLink=\\\"profil\\\">Min profil</a></li>\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" (click)=\\\"onLogout()\\\">Logga ut</a></li>\\n          </ul>\\n      \\n          <ul id=\\\"nav-mobile\\\" class=\\\"sidenav\\\">\\n            <li><a routerLink=\\\"\\\">Hem</a></li>\\n            <li><a routerLink=\\\"jobb\\\">Alla jobb</a></li>\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" routerLink=\\\"skapa\\\">Skapa ett jobb</a></li>\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" routerLink=\\\"mina_jobb\\\">Mina jobb</a></li>\\n            <li><a *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"logga_in\\\">Logga in</a></li>\\n            <li><a *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"registrera\\\">Skapa konto</a></li>\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" routerLink=\\\"profil\\\">Min profil</a></li>\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" (click)=\\\"onLogout()\\\">Logga ut</a></li>\\n          </ul>\\n          <a href=\\\"#\\\" data-target=\\\"nav-mobile\\\" class=\\\"sidenav-trigger\\\"><i class=\\\"material-icons\\\">menu</i></a>\\n        </div>\\n      </nav>\\n</div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { MzToastService } from 'ngx-materialize';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private toastService: MzToastService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLogout(){\n    this.authService.logout();\n    this.toastService.show('Du är nu utloggad!', 3000, 'dark', () => {});\n    this.router.navigate(['']);\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"section\\\">\\n\\n    <!--   Icon Section   -->\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"col m6 offset-m3 s12 center\\\">\\n        <h4 class=\\\"text-lighten-2\\\">Min profil</h4>\\n        <p>\\n          <span *ngIf=\\\"user.description\\\">{{ user.description }}</span>\\n          <span *ngIf=\\\"!user.description\\\">Du har ingen beskrivning.</span>\\n          <br>\\n          <small>\\n            <strong>Färdigheter: </strong>\\n            <span *ngIf=\\\"user.skills\\\">{{ user.skills }}</span>\\n            <span *ngIf=\\\"!user.skills\\\">Du har inte lagt till några färdigheter.</span>\\n          </small>\\n        </p>\\n\\n        <div class=\\\"row\\\">\\n          <form class=\\\"col s12\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"input-field col m12 s12\\\">\\n                <small class=\\\"left\\\">Fullständigt namn</small>\\n                <input value={{user.name}} type=\\\"text\\\" class=\\\"validate\\\" disabled>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"input-field col m12 s12\\\">\\n                <small class=\\\"left\\\">Användarnamn</small>\\n                <input value={{user.username}} type=\\\"text\\\" class=\\\"validate\\\" disabled>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"input-field col m12 s12\\\">\\n                <small class=\\\"left\\\">Email</small>\\n                <input value={{user.email}} id=\\\"email\\\" type=\\\"text\\\" class=\\\"validate\\\" disabled>\\n              </div>\\n            </div>\\n          </form>\\n          <a routerLink=\\\"updatera\\\" class=\\\"waves-effect waves-light btn\\\">Updatera profil</a>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: Object;\n\n  constructor(\n  ) { }\n\n  ngOnInit() {\n    this.user = JSON.parse(localStorage.getItem('user'));\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"section\\\">\\n  \\n      <!--   Icon Section   -->\\n      <div class=\\\"row\\\">\\n  \\n        <div class=\\\"col m6 offset-m3 s12 center\\\">\\n          <h4 class=\\\"text-lighten-2\\\">{{ user.name }}</h4>\\n          <p>\\n            <span *ngIf=\\\"user.description\\\">{{ user.description }}</span>\\n            <span *ngIf=\\\"!user.description\\\">Du har ingen beskrivning.</span>\\n            <br>\\n            <small>\\n              <strong>Färdigheter: </strong>\\n              <span *ngIf=\\\"user.skills\\\">React, Angular, Django</span>\\n              <span *ngIf=\\\"!user.skills\\\">Du har inte lagt till några färdigheter.</span>\\n            </small>\\n          </p>\\n        \\n          <a routerLink=\\\"/mina_jobb/{{jobId}}/\\\" class=\\\"btn mt mb\\\">Gå tillbaka</a>\\n      </div>\\n      \\n    </div>\\n  </div>\\n  \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZTIvcHJvZmlsZTIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../services/api.service';\nimport { RouteService } from '../../services/route.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MzToastService } from 'ngx-materialize';\n\n@Component({\n  selector: 'app-profile2',\n  templateUrl: './profile2.component.html',\n  styleUrls: ['./profile2.component.scss']\n})\nexport class Profile2Component implements OnInit {\n\n  user: Object;\n  jobId: number;\n\n  constructor(\n    private apiService: ApiService,\n    private routeService: RouteService,\n    private route: ActivatedRoute, \n    private router: Router,\n    private toastService: MzToastService\n  ) \n  {\n  }\n\n  ngOnInit() {\n    this.user = {};\n    this.jobId = this.route.snapshot.params.jobId;\n    this.apiService.getUserData(this.route.snapshot.params.id)\n    .subscribe(data => {\n      if(data['success']){\n        this.user = JSON.parse(data['userData']);\n      } else {\n        this.toastService.show('Något oväntat hände, vänligen försök igen.', 3000, 'dark');\n        this.router.navigate(['meddelanden']);\n      }\n    })\n  }\n\n}\n","module.exports = \"<div class=\\\"container center\\\">\\n  <div class=\\\"row login-form\\\">\\n    <h4>Skapa ett konto</h4>\\n    <form class=\\\"col m4 offset-m4 s12\\\" (submit)=\\\"onRegisterSubmit()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"input-field col s12\\\">\\n          <input [(ngModel)]=\\\"name\\\" name=\\\"name\\\" id=\\\"username\\\" type=\\\"text\\\" class=\\\"validate\\\" autofocus>\\n          <label for=\\\"username\\\">Ditt fullständiga namn</label>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"input-field col s12\\\">\\n          <input [(ngModel)]=\\\"username\\\" name=\\\"username\\\" id=\\\"username\\\" type=\\\"text\\\" class=\\\"validate\\\">\\n          <label for=\\\"username\\\">Användarnamn</label>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"input-field col s12\\\">\\n          <input [(ngModel)]=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" type=\\\"text\\\" class=\\\"validate\\\">\\n          <label for=\\\"email\\\">Email</label>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"input-field col s12\\\">\\n          <input [(ngModel)]=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" class=\\\"validate\\\">\\n          <label for=\\\"password\\\">Lösendord</label>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"input-field col s12\\\">\\n          <input [(ngModel)]=\\\"password2\\\" name=\\\"password2\\\" id=\\\"password2\\\" type=\\\"password\\\" class=\\\"validate\\\">\\n          <label for=\\\"password2\\\">Bekräfta lösenord</label>\\n        </div>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn\\\">Skapa konto</button><br><br>\\n      <span>Har du redan ett konto? </span><a routerLink=\\\"/logga_in\\\">Logga in här</a>\\n    </form>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MzToastService } from 'ngx-materialize';\n\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n  password2: String;\n\n  constructor(private validateService: ValidateService,\n              private authService: AuthService,\n              private router: Router,\n              private toastService: MzToastService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      username: this.username,\n      email: this.email,\n      password: this.password,\n    }\n\n    if(!this.validateService.validateRegister(user)){\n      this.toastService.show('Du måste fylla i alla fält!', 3000, 'dark', () => {});\n      return false;\n    }\n\n    if(!this.validateService.validateEmail(user.email)){\n      this.toastService.show('Du måste fylla i en giltig e-postadress!', 3000, 'dark', () => {});\n      return false;\n    }\n\n    if(!this.validateService.validatePassword(this.password, this.password2)){\n      this.toastService.show('Lösenorden matchar inte.', 3000, 'dark', () => {});\n      return false;\n    }\n\n    // register user\n    this.authService.registerUser(user)\n    .subscribe(data => {\n      if(data['success']){\n        this.toastService.show('Ditt konto har skapats och du kan nu logga in.', 3000, 'dark', () => {});\n        this.router.navigate(['logga_in']);\n      } else {\n        this.toastService.show('Något oväntat hände, vänligen försök igen.', 3000, 'dark', () => {});\n        return false;\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"section\\\">\\n  \\n      <!--   Icon Section   -->\\n      <div class=\\\"row\\\">\\n  \\n        <div class=\\\"col m6 offset-m3 s12 center\\\">\\n          <h4 class=\\\"text-lighten-2\\\">Uppdatera profil</h4>\\n          <p>\\n            Tänk på att det är väldigt viktigt med en bra beskrivning av dig själv som beskriver exakt varför du ska få jobben,\\n            du bör även lägga till dina färdigheter.\\n          </p>\\n          <div class=\\\"row\\\">\\n            <form class=\\\"col s12\\\" (submit)=\\\"updateSubmit()\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col m12 s12\\\">\\n                  <small class=\\\"left\\\">Beskrivning</small>\\n                  <textarea [(ngModel)]=\\\"description\\\" name=\\\"description\\\" type=\\\"text\\\" class=\\\"validate materialize-textarea\\\" style=\\\"height:8em;\\\">{{description}}</textarea>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col m12 s12\\\">\\n                  <small class=\\\"left\\\">Färdigheter</small>\\n                  <input value={{skills}} [(ngModel)]=\\\"skills\\\" name=\\\"skills\\\" type=\\\"text\\\" class=\\\"validate\\\" length = \\\"10\\\">\\n                </div>\\n              </div>\\n              <button type=\\\"submit\\\" class=\\\"waves-effect waves-light btn\\\">Spara</button>\\n            </form>\\n          </div>\\n        </div>\\n  \\n      </div>\\n    </div>\\n  </div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXBkYXRlcHJvZmlsZS91cGRhdGVwcm9maWxlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../../services/api.service';\n\nimport { MzToastService } from 'ngx-materialize';\n\n@Component({\n  selector: 'app-updateprofile',\n  templateUrl: './updateprofile.component.html',\n  styleUrls: ['./updateprofile.component.scss']\n})\nexport class UpdateprofileComponent implements OnInit {\n\n  description: String;\n  skills: String;\n\n  constructor(\n    private apiService: ApiService,\n    private router: Router,\n    private toastService: MzToastService\n  ) { \n  }\n\n  ngOnInit() {\n    this.description = JSON.parse(localStorage.getItem('user'))['description'];\n    this.skills =JSON.parse(localStorage.getItem('user'))['skills']; \n  }\n\n  updateSubmit(){\n    const updateObj = {\n      user_id: JSON.parse(localStorage.getItem('user'))['id'],\n      description: this.description,\n      skills: this.skills\n    };\n    this.apiService.updateProfile(updateObj)\n    .subscribe(data => {\n      if(data['success']){\n        const newUserObj = {\n          id: JSON.parse(localStorage.getItem('user'))['id'],\n          name: JSON.parse(localStorage.getItem('user'))['name'],\n          username: JSON.parse(localStorage.getItem('user'))['username'],\n          email: JSON.parse(localStorage.getItem('user'))['email'],\n          description: updateObj.description,\n          skills: updateObj.skills,\n        }\n        localStorage.setItem('user', JSON.stringify(newUserObj));\n        this.toastService.show('Din profil är uppdaterad!', 3000, 'dark', () => {});\n        this.router.navigate(['profil']);\n      } else {\n        this.toastService.show('Något oväntat hände, vänligen försök igen.', 3000, 'dark', () => {});\n        return false;\n      }\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate{\n  constructor(private authService: AuthService, private router: Router){\n\n  }\n\n  canActivate(){\n    if(this.authService.loggedIn()){\n      return true;\n    } else{\n      this.router.navigate(['/logga_in']);\n      return false;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllJobs(){\n    return this.http.get('/api/jobs')\n  }\n\n  pGetAllJobs(pageNum){\n    return this.http.get(`//api/jobs/p/${pageNum}`)\n  }\n\n  getJobData(id){\n    return this.http.get(`/api/jobs/${id}`)\n  }\n\n  searchJobs(term){\n    return this.http.get(`/api/search?term=${term}`)\n  }\n\n  addJob(job){\n    const headers = new HttpHeaders({\n      'Content-Type':  'application/json',\n      Authorization: localStorage.getItem('id_token')\n    });\n    return this.http.post('/api/add', job, {headers:headers})\n  }\n\n  deleteJob(jobId){\n    const headers = new HttpHeaders({\n      Authorization: localStorage.getItem('id_token')\n    });\n    return this.http.delete(`/api/remove_job/${jobId}/`, {headers:headers})\n  }\n\n  getUserJobs(user_id){\n    const headers = new HttpHeaders({\n      Authorization: localStorage.getItem('id_token')\n    });\n    return this.http.get(`/api/user_jobs/${user_id}`, {headers:headers})\n  }\n\n  getUserData(userId){\n    const headers = new HttpHeaders({\n      Authorization: localStorage.getItem('id_token')\n    });\n    return this.http.get(`/api/user_data/${userId}`, {headers:headers})\n  }\n\n  getJobBids(id){\n    const headers = new HttpHeaders({\n      Authorization: localStorage.getItem('id_token')\n    });\n    return this.http.get(`/api/bids/${id}`, {headers:headers})\n  }\n\n  sendBid(bidObj){\n    const headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem('id_token')\n    });\n    return this.http.post('/api/send_bid', bidObj, {headers:headers})\n  }\n\n  deleteBid(bidId){\n    const headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem('id_token')\n    });\n    return this.http.delete(`/api/remove_bid/${bidId}/`, {headers:headers})\n  }\n\n  updateProfile(updateObj){\n    const headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem('id_token')\n    });\n    return this.http.put('/api/update_profile', updateObj, {headers:headers})\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  authToken: any;\n  user: any;\n\n  constructor(private http: HttpClient, private jwtHelper: JwtHelperService) { }\n\n  registerUser(user){\n    const headers = new HttpHeaders({\n      'Content-Type':  'application/json'\n    });\n    return this.http.post('/users/register', user, {headers:headers});\n  }\n\n  loginUser(user){\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post('/users/auth', user, {headers:headers});\n  }\n\n  updateUser(updateUserObj){\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post('/users/update', updateUserObj, {headers:headers});\n  }\n\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken(){\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn(){\n    this.loadToken();\n    return !this.jwtHelper.isTokenExpired();\n  }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MailService {\n\n  constructor(private http: HttpClient) { }\n\n  sendEmployer(messageObj){\n    const headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\"\n    });\n    return this.http.post('http://localhost:5000/mail/send_employer', messageObj, {headers:headers})\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteService {\n\n  private previousUrl: string;\n  private currentUrl: string;\n\n  constructor(private router: Router) {\n    this.currentUrl = this.router.url;\n    router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {        \n        this.previousUrl = this.currentUrl;\n        this.currentUrl = event.url;\n      };\n    });\n  }\n\n  public getPreviousUrl() {\n    return this.previousUrl;\n  }    \n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if(user.name == undefined || user.username == undefined || user.email == undefined || user.password == undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  validatePassword(password1, password2) {\n    if(password1 === password2) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  validateJob(jobb){\n    if(jobb.title == undefined || jobb.description == '' || jobb.contact_email == undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}